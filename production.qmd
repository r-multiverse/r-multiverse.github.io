---
title: "Production repository"
---

```{r, eval = TRUE, echo = FALSE}
source("R/utils.R")
```

The Production repository comprises a subset of [Community](community.md) package releases
which are mutually compatible and meet a high standard of quality.
R-multiverse deploys Production in [periodic snapshots throughout the year](#schedule).
Prior to each snapshot, packages undergo a [Staging](#staging) process that gradually freezes release candidates and their dependencies.

## Users

The current Production snapshot was deployed on `r snapshot()$snapshot`.
It includes package sources, Mac OS binaries, and Windows binaries.^[Binaries over a year old are automatically removed.]
The snapshot was tested with the base R `r snapshot()$r` and [CRAN](https://cran.r-project.org/) packages from the [dependency freeze](#staging) on `r snapshot()$dependency_freeze`.
Please use the `r snapshot()$dependency_freeze` version of CRAN from [Posit Public Package Manager (p3m)](https://packagemanager.posit.co) to install dependencies:^[[Posit Public Package Manager (p3m)](https://packagemanager.posit.co) might not actually snapshot CRAN every day, but it still hosts a usable `https://packagemanager.posit.co/cran/yyyy-mm-dd` URL, even if the underlying physical snapshot came from an earlier day. <https://p3m.dev/__api__/repos/cran/transaction-dates> lists all the physical snapshots.]

```{r, eval = TRUE, echo = FALSE, results = "asis"}
text <- c(
  "```r",
  "install.packages(",
  "  \"polars\",",
  "  repos = c(",
  sprintf("    \"https://production.r-multiverse.org/%s\",", snapshot()$snapshot),
  sprintf("    \"https://packagemanager.posit.co/cran/%s\"", snapshot()$dependency_freeze),
  "  )",
  ")",
  "```"
)
cat(text, sep = "\n")
```

## Staging

R-multiverse publishes a Production snapshot every 3 months.
Staging is the gradual process that builds these snapshots.
The goal of Staging is to ensure that packages and their dependencies are fully functional and mutually compatible in Production.
Similar to the [Debian release cycle](https://release.debian.org), a [special Staging repository](https://staging.r-multiverse.org) slowly transforms a collection of unstable [Community](community.md) releases into a stable ecosystem of packages in Production.

Staging happens in cycles.
There are four cycles per year, and each cycle lasts three months.
Each month is a distinct phase that gradually hardens the packages that will enter the snapshot.

### Month 1: dependency freeze

Here, the [Staging repository](https://staging.r-multiverse.org) freezes the versions of base R^[Patch versions of base R can still update. For example, if the targeted base R version is 4.4, [checks](#checks) may enforce R 4.4.0, 4.4.1, 4.4.2, or 4.4.3.] and packages from [CRAN](https://cran.r-project.org)^[R-multiverse uses the [Posit Public Package Manager (p3m)](https://packagemanager.posit.co/) version of [CRAN](https://cran.r-project.org) from month 1 day 1. `p3m` might not have a physical snapshot from that precise day, but it provides a usable `install.packages()` URL. The physical snapshot might come from an earlier day. <https://p3m.dev/__api__/repos/cran/transaction-dates> lists the physical snapshots.].
For the purpose of running and enforcing [checks](#checks), these versions of dependencies do not change until after the snapshot is finalized on month 3 day 1.
New [Community](community.md) package releases freely enter and leave the [Staging repository](https://staging.r-multiverse.org).
This process gives packages, contributors, and the [Staging repository](https://staging.r-multiverse.org) itself an entire month to adjust to a fixed and predictable set of dependencies.

### Month 2: candidate freeze

Beginning on month 2, newly registered packages can no longer enter the [Staging repository](https://staging.r-multiverse.org).
If a [Staging repository](https://staging.r-multiverse.org) package passes [checks](#checks) at least once during month 2, it immediately becomes staged.
When a package becomes staged, its version freezes, and it can no longer upgrade in the [Staging repository](https://staging.r-multiverse.org) until the next 3-month cycle.
A package can only upgrade in [Staging](https://staging.r-multiverse.org) if:

1. It is not already staged, and
2. Its [checks](#checks) are failing.

Staged packages appear on the [Production status page](https://r-multiverse.org/status/production.html) and are guaranteed admittance into the next snapshot.
If a package is already staged but its [checks](#checks) fail later in month 2, then the package is still staged and will still enter the upcoming snapshot.

### Month 3: production snapshot

The Production snapshot finalizes on day 1 of month 3.^[The `install.packages()` URL may be reachable before the snapshot date, but the contents are not finalized until the actual day of the snapshot.]
Production does not add, remove, or update packages at any other time.
^[A package is only removed from a snapshot if it becomes absolutely necessary to do so,
e.g. because of an egregious [policy](policies.md) violation.]
The snapshot consists of all staged packages from month 2.
For the rest of month 3, the [Staging repository](https://staging.r-multiverse.org) does not change, and [R-multiverse administrators](team.md#administrators) have time to fix any rare and unexpected problems that may arise during the Staging process.

Packages in the [Staging repository](https://staging.r-multiverse.org) repository do not change for the entire month.
This gives the [R-multiverse administrators](team.md#administrators) time to fix rare and unexpected problems that may arise during the Staging process.

## Schedule

[Staging](#staging) follows the same schedule each year.
Each month-long phase of [Staging](#staging) starts on the 15th of the month.

| Quarter | Dependency freeze begins | Candidate freeze begins | Production snapshot finalizes |
|---|---|---|---|
| Q1 | January 15 | February 15 | March 15 |
| Q2 | April 15 | May 15 | June 15 |
| Q3 | July 15 | August 15 | September 15 |
| Q4 | October 15 | November 15 | December 15 |

## Checks

To reach Production, a package release must comply with all R-multiverse [policies](policies.md).
In addition, it must pass the following list of automated checks in the [Staging repository](#staging) at least once during the [candidate freeze](#candidate-freeze):

#### Legal

* The package must have a [free and open-source license](https://en.wikipedia.org/wiki/Free_and_open-source_software).

#### Security

* The release must not have an active [security advisory](https://github.com/RConsortium/r-advisory-database).

#### Quality

* `R CMD build` and `R CMD check` must pass in the [Staging universe](https://staging.r-multiverse.org) (no errors or warnings) on Mac, Windows, and Linux. These checks use the versions of base R and CRAN packages from the first day of the current [Staging cycle](production.qmd#staging).

#### Documentation

* The version number of the current release must be strictly greater than the version numbers of all previous releases of the package.
* If the package is on both CRAN and R-multiverse, the CRAN version number must not be higher than the R-multiverse one. 

#### Dependencies

* The `DESCRIPTION` file must not include a `Remotes:` field.
* All strong dependencies^[A strong dependency is another package listed in the `Depends:`, `Imports:`, or `LinkingTo:` field of the `DESCRIPTION` file.] from R-multiverse must also qualify^[The dependency must pass at least once during the [candidate freeze](#candidate-freeze), but not necessarily at the same time as the downstream packages that depend on it.] for Production.
^[An R-multiverse package can strongly depend on a package from CRAN, regardless of CRAN check status, as long as the CRAN package exists in the Posit Public Package manager snapshot used in [Staging](#staging).]

## Status

R-multiverse continuously updates a [website](https://r-multiverse.org/status/index.html) to report status and [check](#checks).
The [Production status page](https://r-multiverse.org/status/production.html) lists all the packages staged for the next snapshot.
[Separate pages](https://r-multiverse.org/status/staging.html) list all the packages with [check](#checks) issues in each of [Community](community.md) and [Staging](#staging).
In addition, each package has its own individual [status page](https://r-multiverse.org/status/staging/polars.html) and [RSS feed](https://r-multiverse.org/status/staging/polars.xml).

## Archive

The following table lists all past and present Production snapshots, with more recent snapshots listed higher.
Snapshots over a year old do not have binaries.
The table includes the start date of each phase of [Staging](#staging) and the compatible version of base R.
The URLs for the `repos` argument of `install.packages()` can be inferred from the dates below.

```{r, echo = FALSE}
gt::gt(snapshots()[, c("r", "dependency_freeze", "candidate_freeze", "snapshot")])
```
